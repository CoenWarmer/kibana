/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import { RootSchema } from '@kbn/analytics-client';
import { Message } from '../../common';
import type { Feedback } from '../components/feedback_buttons';

export const MESSAGE_FEEDBACK = 'message_feedback';

export interface MessageFeedback extends Omit<Message, '@timestamp'> {
  feedback: Feedback;
}

export interface TelemetryEvent {
  eventType: typeof MESSAGE_FEEDBACK;
  schema: RootSchema<MessageFeedback>;
}

export const MESSAGE_FEEDBACK_SCHEMA: TelemetryEvent = {
  eventType: MESSAGE_FEEDBACK,
  schema: {
    message: {
      properties: {
        content: {
          type: 'text',
          _meta: {
            description: 'The response generated by the LLM.',
            optional: true,
          },
        },
        name: {
          type: 'text',
          _meta: {
            description: 'The name of the function that was executed.',
            optional: true,
          },
        },
        role: {
          type: 'text',
          _meta: {
            description: 'The actor that generated the response.',
          },
        },
        data: {
          type: 'text',
          _meta: {
            description: '',
            optional: true,
          },
        },
        function_call: {
          properties: {
            name: {
              type: 'text',
              _meta: {
                description: 'The name of the function that was executed.',
                optional: false,
              },
            },
            arguments: {
              type: 'text',
              _meta: {
                description: 'The arguments that were used when executing the function.',
                optional: true,
              },
            },
            trigger: {
              type: 'text',
              _meta: {
                description: 'The actor which triggered the execution of this function.',
              },
            },
          },
        },
      },
    },
    feedback: {
      type: 'text',
      _meta: {
        description: 'Whether the user has deemed this response useful or not',
      },
    },
  },
};
