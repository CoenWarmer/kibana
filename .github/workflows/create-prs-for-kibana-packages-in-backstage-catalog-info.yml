name: Sync Kibana packages as entries in Catalog Info repo
description: This workflow will sync Kibana packages as entries inside the Elastic Catalog Info repository. It will create a PR when packages are created / edited / deleted, making sure the Catalog Info repository will remain up to date with Kibana. This in turn will make sure Backstage will remain up to date with Kibana.
on:
  workflow_dispatch:
    inputs:
      base:
        description: 'Base branch on elastic/catalog-info'
        default: main
      filter:
        description: 'Optional folder gate (substring on folder path), e.g., x-pack'
        required: false

permissions:
  contents: write
  pull-requests: write

jobs:
  build-matrix:
    name: Discover Kibana plugins
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.emit.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - id: emit
        env:
          FILTER: ${{ github.event.inputs.filter }}
        run: |
          set -euo pipefail
          node src/dev/backstage_catalog/emit_kibana_plugins_matrix.ts \
            | tr -d '\n' \
            | awk '{print "matrix=" $0}' >> "$GITHUB_OUTPUT"
  sync:
    name: Sync Kibana packages as entries in Catalog Info repo
    needs: build-matrix
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.OBS_AUTOMATION_APP_ID }}
          private-key: ${{ secrets.OBS_AUTOMATION_APP_PEM }}
          owner: elastic

      - name: Checkout Catalog Info repo (elastic/catalog-info)
        uses: actions/checkout@v4
        with:
          repository: elastic/catalog-info
          token: ${{ steps.app-token.outputs.token }}
          path: catalog-info

      - uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Create files for Kibana packages in an update branch to the Catalog Info repo
        env:
          BRANCH: backstage/kibana/bulk-update
          MATRIX: ${{ needs.build-matrix.outputs.matrix }}
        run: ../backstage_catalog/sync_kibana_packages_as_catalog_entries.sh

      - name: Open or update PR in the Catalog Info repo
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          BRANCH: backstage/kibana/bulk-update
        run: |
          set -euo pipefail

          REPO='elastic/catalog-info'
          BRANCH='${{ env.BRANCH }}'
          BASE='${{ github.event.inputs.base }}'
          PR_BODY=/tmp/pr_body.md

          echo "Automated bulk update of Backstage components" > "$PR_BODY"

          if [ -f /tmp/bulk_changes.md ]; then
            echo >> "$PR_BODY"
            cat /tmp/bulk_changes.md >> "$PR_BODY"
          fi

          if gh pr view "$BRANCH" --repo "$REPO" >/dev/null 2>&1; then
            gh pr edit "$BRANCH" --repo "$REPO" --title "Update Kibana packages" --body-file "$PR_BODY" --base "$BASE"
          else
            gh pr create --repo "$REPO" --title "Update Kibana packages" --body-file "$PR_BODY" --head "$BRANCH" --base "$BASE"
          fi
